use tokio::sync::mpsc;
use walkdir::WalkDir;

#[tokio::main]
async fn main() {
	println!("starting");
	let (tx, mut rx) = mpsc::channel(1);
	let p =  tokio::task::spawn(sender(tx));
	for _ in 0..3 {
		if let Some(v) =  rx.recv().await {
			println!("{}", v.path().display());
		} else {
			println!("recv no value");
		}
	}
	drop(rx);
	match p.await {
	Ok(Ok(()))  =>
		println!("ok!"),
	Ok(Err(err)) =>
		println!("sender error: {}", err),
	Err(err) =>
		println!("join error: {}", err),
	}
	println!("done");
}

async fn sender(tx: mpsc::Sender<walkdir::DirEntry>) -> Result<(), anyhow::Error> {
	for entry in WalkDir::new("/tmp/m").sort_by_file_name() {
		tx.send(entry?).await?;
	}
	Ok(())
}
